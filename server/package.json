{
  "name": "webcore-server",
  "version": "2.0.0",
  "description": "WebCore Backend - Advanced Content Management System Server",
  "main": "dist/server.js",
  "type": "commonjs",
  "scripts": {
    "start": "node dist/server.js",
    "dev": "nodemon --exec ts-node src/server.ts",
    "build": "npm run db:generate && tsc && npm run copy-assets",
    "copy-assets": "copyfiles -u 1 src/**/*.json src/**/*.sql dist/",
    "postinstall": "npm run db:generate",
    "deploy": "npx prisma migrate deploy && npm run db:seed",
    "test": "jest --passWithNoTests",
    "test:watch": "jest --watch --passWithNoTests",
    "test:coverage": "jest --coverage --passWithNoTests",
    "lint": "eslint src/**/*.ts",
    "lint:fix": "eslint src/**/*.ts --fix",
    "type-check": "tsc --noEmit",
    "clean": "rimraf dist/ coverage/ .nyc_output/",
    "db:generate": "prisma generate",
    "db:migrate": "prisma migrate dev",
    "db:migrate:prod": "prisma migrate deploy",
    "db:seed": "ts-node prisma/seeds/index.ts",
    "db:studio": "prisma studio",
    "db:reset": "prisma migrate reset --force",
    "docker:build": "docker build -t webcore-server .",
    "docker:run": "docker run -p 3000:3000 webcore-server"
  },
  "keywords": [
    "cms",
    "content-management",
    "plugin-system",
    "nodejs",
    "express",
    "typescript",
    "postgresql",
    "prisma",
    "jwt",
    "rbac"
  ],
  "author": "WebCore Team",
  "license": "MIT",
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=8.0.0"
  },
  "dependencies": {
    "express": "^4.19.2",
    "cors": "^2.8.5",
    "helmet": "^7.1.0",
    "compression": "^1.7.4",
    "morgan": "^1.10.0",
    "dotenv": "^16.4.5",
    "bcryptjs": "^2.4.3",
    "jsonwebtoken": "^9.0.2",
    "joi": "^17.12.2",
    "express-rate-limit": "^7.2.0",
    "express-validator": "^7.0.1",
    "multer": "^1.4.5-lts.1",
    "adm-zip": "^0.5.10",
    "sharp": "^0.33.1",
    "node-cron": "^3.0.3",
    "uuid": "^9.0.1",
    "speakeasy": "^2.0.0",
    "qrcode": "^1.5.3",
    "nodemailer": "^6.9.13",
    "winston": "^3.13.0",
    "swagger-jsdoc": "^6.2.8",
    "swagger-ui-express": "^5.0.0",
    "@prisma/client": "^5.12.1",
    "prisma": "^5.12.1",
    "redis": "^4.6.13",
    "socket.io": "^4.7.5",
    "archiver": "^7.0.1",
    "yauzl": "^3.0.0",
    "node-cron": "^3.0.3",
    "sharp": "^0.33.3",
    "mime-types": "^2.1.35",
    "express-fileupload": "^1.5.0",
    "zod": "^3.22.4",
    "tsconfig-paths": "^4.2.0"
  },
  "devDependencies": {
    "@types/node": "^20.12.7",
    "@types/express": "^4.17.21",
    "@types/cors": "^2.8.17",
    "@types/compression": "^1.7.5",
    "@types/morgan": "^1.9.9",
    "@types/bcryptjs": "^2.4.6",
    "@types/jsonwebtoken": "^9.0.6",
    "@types/multer": "^1.4.11",
    "@types/adm-zip": "^0.5.5",
    "@types/sharp": "^0.32.0",
    "@types/node-cron": "^3.0.11",
    "@types/uuid": "^9.0.8",
    "@types/speakeasy": "^2.0.10",
    "@types/qrcode": "^1.5.5",
    "@types/nodemailer": "^6.4.14",
    "@types/swagger-jsdoc": "^6.0.4",
    "@types/swagger-ui-express": "^4.1.6",
    "@types/archiver": "^6.0.2",
    "@types/yauzl": "^2.10.3",
    "@types/node-cron": "^3.0.11",
    "@types/mime-types": "^2.1.4",
    "@types/express-fileupload": "^1.5.0",
    "@types/jest": "^29.5.12",
    "@types/supertest": "^6.0.2",
    "typescript": "^5.4.5",
    "ts-node": "^10.9.2",
    "nodemon": "^3.1.0",
    "jest": "^29.7.0",
    "ts-jest": "^29.1.2",
    "supertest": "^7.0.0",
    "eslint": "^8.57.0",
    "@typescript-eslint/eslint-plugin": "^7.7.1",
    "@typescript-eslint/parser": "^7.7.1",
    "prettier": "^3.2.5",
    "copyfiles": "^2.4.1",
    "rimraf": "^5.0.5"
  },
  "jest": {
    "preset": "ts-jest",
    "testEnvironment": "node",
    "roots": ["<rootDir>/src", "<rootDir>/tests"],
    "testMatch": ["**/__tests__/**/*.ts", "**/?(*.)+(spec|test).ts"],
    "collectCoverageFrom": [
      "src/**/*.ts",
      "!src/**/*.d.ts",
      "!src/server.ts"
    ],
    "coverageDirectory": "coverage",
    "coverageReporters": ["text", "lcov", "html"]
  },
  "eslintConfig": {
    "parser": "@typescript-eslint/parser",
    "plugins": ["@typescript-eslint"],
    "extends": [
      "eslint:recommended",
      "@typescript-eslint/recommended"
    ],
    "rules": {
      "@typescript-eslint/no-unused-vars": "error",
      "@typescript-eslint/no-explicit-any": "warn",
      "prefer-const": "error",
      "no-var": "error"
    }
  }
}
